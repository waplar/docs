name: Deploy VitePress site to GitHub Pages

on:
    push:
        branches:
            - alpha.x
    workflow_dispatch:

permissions:
    contents: write
    pages: write
    id-token: write

concurrency:
    group: pages
    cancel-in-progress: false

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4
                with:
                    # 获取完整历史记录，确保所有版本都能正确构建
                    fetch-depth: 0

            -   name: Setup Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: 20
                    # 缓存依赖，减少构建时间
                    cache: yarn

            # 安装依赖
            -   name: Install dependencies
                run: yarn install

            # 根据分支，设置 VitePress 的 base 路径
            -   name: Set base path for VitePress
                run: |
                    # 设置默认环境变量，用于后续构建
                    echo "LATEST=false" >> $GITHUB_ENV
                    echo "VITEPRESS_BASE=/" >> $GITHUB_ENV
                    
                    case "${{ github.ref_name }}" in 
                        "alpha.x")
                            echo "LATEST=true" >> $GITHUB_ENV
                            echo "VITEPRESS_BASE=/alpha/" >> $GITHUB_ENV
                        ;;
                    esac

            # 生成构建文件
            -   name: Build with VitePress
                run: yarn docs:build

            # 确认构建文件是否生成
            -   name: Check if build files exist
                run: ls -la docs/.vitepress/dist

            # 上传构建文件到 artifact，用于后续部署
            -   name: Upload build files for deployment
                uses: actions/upload-artifact@v4
                with:
                    name: site-build
                    path: docs/.vitepress/dist

    # 从 `build` job 获取构建文件 然后同步到 `gh-pages` 分支
    sync-branch:
        needs: build
        runs-on: ubuntu-latest
        steps:
            # 检出 `gh-pages` 分支
            -   name: Checkout gh-pages
                uses: actions/checkout@v4
                with:
                    ref: gh-pages

            # 拉取最新的 gh-pages 变更，确保本地是最新状态
            -   name: Pull latest gh-pages
                run: |
                    git pull origin gh-pages --rebase || echo "No updates to merge"

            # 下载构建文件
            -   name: Download build files from artifact
                uses: actions/download-artifact@v4
                with:
                    name: site-build
                    path: ./site-build

            # 确认下载的文件是否存在
            -   name: List downloaded files
                run: ls -la ./site-build

            -   name: Set up Git configuration
                run: |
                    git config --global user.name "GitHub Actions"
                    git config --global user.email "github-actions@users.noreply.github.com"

            # 根据分支，将文件复制到对应的子目录
            -   name: Copy build files to gh-pages
                run: |
                    if [ "${{ github.ref_name }}" == "alpha.x" ]; then
                        # 删除旧的构建文件夹
                        if [ -d "latest" ]; then
                            rm -rf latest/
                            echo "Folder 'latest' has been deleted."
                        fi
                    
                        if [ -d "alpha" ]; then
                            rm -rf latest/
                            echo "Folder 'latest' has been deleted."
                        fi
                    
                        # 复制文件到对应子目录
                        mkdir -p latest
                        cp -r ./site-build/* latest/
                        mkdir -p alpha
                        cp -r ./site-build/* alpha/
                    fi
                    
                    # 删除多余文件夹
                    rm -rf ./site-build

            # 提交并推送到 gh-pages 分支
            -   name: Commit and push changes to gh-pages
                run: |
                    git add -A
                    git commit -m "Deploy ${{ github.ref_name }} branch" || echo "No changes to commit"
                    # 直接推送到 gh-pages 分支
                    git push --force origin gh-pages

            # 重新组织目录
            -   name: Reorganize the directory
                run: |
                    cp -r ./latest/* .
                    rm -rf ./latest

            # 上传全量的构建文件进行部署
            -   name: Upload artifact
                uses: actions/upload-pages-artifact@v3
                with:
                    name: github-pages
                    path: .

    deploy:
        needs: sync-branch
        runs-on: ubuntu-latest
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        steps:
            -   name: Deploy to GitHub Pages
                id: deployment
                uses: actions/deploy-pages@v4
                with:
                    artifact_name: github-pages
